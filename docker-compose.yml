services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: timesheet-postgres
    environment:
      POSTGRES_DB: timesheet_db
      POSTGRES_USER: timesheet_user
      POSTGRES_PASSWORD: timesheet_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - timesheet-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: timesheet-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://timesheet_user:timesheet_password@postgres:5432/timesheet_db
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
      PORT: 5000
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - timesheet-network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: timesheet-frontend
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - timesheet-network
    command: npm run dev

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: timesheet-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - timesheet-network

volumes:
  postgres_data:
  redis_data:

networks:
  timesheet-network:
    driver: bridge
